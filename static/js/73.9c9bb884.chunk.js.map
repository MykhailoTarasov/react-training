{"version":3,"file":"static/js/73.9c9bb884.chunk.js","mappings":"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","sources":["api.js","components/QuizForm/QuizForm.Styled.js","components/QuizForm/QuizForm.js","pages/CreateQuizPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://64dcf6bce64a8525a0f76db7.mockapi.io/api';\n\nexport const fetchQuizzes = async () => {\n  const response = await axios.get('/quizzes');\n  return response.data;\n};\n\nexport const fetchQuizzesById = async (quizId) => {\n  const response = await axios.get(`/quizzes/${quizId}`);\n  return response.data;\n};\n\nexport const createQuiz = async quiz => {\n  const response = await axios.post('/quizzes', quiz);\n  return response.data;\n};\n\nexport const deleteQuizById = async quizId => {\n  const response = await axios.delete(`/quizzes/${quizId}`);\n  return response.data;\n};\n","import styled from 'styled-components';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3)};\n  max-width: 300px;\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.error};\n  font-size: 14px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { ErrMessage, Label, StyledForm } from './QuizForm.Styled';\n\nconst quizSchema = Yup.object().shape({\n  topic: Yup.string().min(3, 'Too short!').required('This field is required!'),\n  time: Yup.number()\n    .min(10, 'Min 10 mins')\n    .max(45, 'Max 45 mins')\n    .required('This field is required!'),\n  questions: Yup.number()\n    .min(3, 'Min 3 questions')\n    .required('This field is required!'),\n  level: Yup.string()\n    .oneOf(['beginner', 'intermediate', 'advanced'])\n    .required('This field is required!'),\n});\n\nconst QuizForm = ({ onAdd }) => {\n  return (\n    <Formik\n      initialValues={{\n        topic: '',\n        time: 0,\n        questions: 0,\n        level: 'beginner',\n      }}\n      validationSchema={quizSchema}\n      onSubmit={(values, actions) => {\n        onAdd(values);\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <Label>\n          Topic\n          <Field name=\"topic\" />\n          <ErrMessage name=\"topic\" component=\"div\" />\n        </Label>\n\n        <Label>\n          Time\n          <Field type=\"number\" name=\"time\" />\n          <ErrMessage name=\"time\" component=\"div\" />\n        </Label>\n\n        <Label>\n          Questions\n          <Field type=\"number\" name=\"questions\" />\n          <ErrMessage name=\"questions\" component=\"div\" />\n        </Label>\n\n        <Label>\n          Level\n          <Field as=\"select\" name=\"level\">\n            <option value=\"beginner\">Beginner</option>\n            <option value=\"intermediate\">Intermediate</option>\n            <option value=\"advanced\">Advanced</option>\n          </Field>\n          <ErrMessage name=\"level\" component=\"div\" />\n        </Label>\n\n        <button type=\"submit\">Add quiz</button>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nexport default QuizForm;\n","import QuizForm from 'components/QuizForm/QuizForm';\nimport { useState } from 'react';\nimport { createQuiz } from 'api';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Link } from 'react-router-dom';\n\nexport default function CreateQuizPage() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const addQuiz = async newQuiz => {\n    try {\n      setLoading(true);\n      setError(false);\n      await createQuiz(newQuiz);\n      toast.success('Создали квиз! Вернитесь на список чтобы увидеть!');\n    } catch (error) {\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <Link to=\"/quizzes\">\n        <button>Back to quizzes</button>\n      </Link>\n      <QuizForm onAdd={addQuiz} />\n      <Toaster position=\"top-right\" />\n      {loading && <div>ADDING QUIZ...</div>}\n      {error && <div>OOPS! AN ERROR!</div>}\n    </div>\n  );\n}\n"],"names":["axios","fetchQuizzes","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchQuizzesById","_ref2","_callee2","quizId","_context2","concat","_x","createQuiz","_ref3","_callee3","quiz","_context3","_x2","deleteQuizById","_ref4","_callee4","_context4","_x3","StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","spacing","ErrMessage","ErrorMessage","_templateObject2","colors","error","Label","_templateObject3","quizSchema","Yup","shape","topic","min","required","time","max","questions","level","oneOf","onAdd","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","resetForm","children","_jsxs","Field","name","component","type","as","value","CreateQuizPage","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","setError","addQuiz","newQuiz","toast","t0","finish","Link","to","QuizForm","Toaster","position"],"sourceRoot":""}